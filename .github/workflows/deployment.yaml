name: Build Project Stargate and Deploy to Cloud Run

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - id: auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Docker auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          cd web_app
          echo "FIREBASE_ADMIN_CLIENT_EMAIL=${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_ADMIN_PRIVATE_KEY=${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env
          docker build -t project-stargate-web .
          docker tag project-stargate-web us-central1-docker.pkg.dev/project-stargate-web/project-stargate-web-repo/project-stargate-web:${{ github.sha }}
          docker push us-central1-docker.pkg.dev/project-stargate-web/project-stargate-web-repo/project-stargate-web:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "project-stargate-web" \
                  --image "us-central1-docker.pkg.dev/project-stargate-web/project-stargate-web-repo/project-stargate-web:${{ github.sha }}" \
                  --region="us-central1" \
                  --allow-unauthenticated \
                  --port=3000 \

  deploy-websocket:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - id: auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Docker auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          cd websocket
          docker build -t project-stargate-websocket .
          docker tag project-stargate-websocket us-central1-docker.pkg.dev/project-stargate-web/project-stargate-web-repo/project-stargate-websocket:${{ github.sha }}
          docker push us-central1-docker.pkg.dev/project-stargate-web/project-stargate-web-repo/project-stargate-websocket:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "project-stargate-websocket" \
                  --image "us-central1-docker.pkg.dev/project-stargate-web/project-stargate-web-repo/project-stargate-websocket:${{ github.sha }}" \
                  --region="us-central1" \
                  --allow-unauthenticated \
                  --port=8000 \
                  --set-env-vars GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}  \
